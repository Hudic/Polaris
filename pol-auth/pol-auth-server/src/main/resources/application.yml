spring:
  application:
    name: pol-auth
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null
  redis:
    database: 2
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    pool:
    max-active: 20
  datasource:
    name: polaris
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}//ag_auth_v1?useUnicode=true&characterEncoding=UTF8
    username: root
    password: root
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedSrarements: 20
  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: guest
    password: guest
  sleuth:
    enabled: true
    http:
      legacy:
        enabled: true
  cloud:
    consul:
      enabled: true
      host: 127.0.0.1
      port: 8500
      discovery:
        healthCheckPath: /actuator/health
        healthCheckInterval: 5s
        instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
        register: true
        enabled: true
  jta:
    atomikos:
      properties:
        default-max-wait-time-on-shutdown:
    bitronix:
      properties:
        warn-about-zero-resource-transaction:

mybatis:
  basepackage: com.github.hudic.auth.mapper
  xmlLocation: classpath:mapper/**/*.xml
  mapper-locations: "classpath*:mapper/*.xml"
server:
  port: 9777 #启动端口

feign:
  httpClient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 # 并发执行的最大线程数，默认10
      maxQueueSize: 1000 # BlockingQueue的最大队列数
      queueSizeRejectionThreshould: 500 # 即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 1000

eureka:
  instance:
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health
    # docker 部署开启
    prefer-ip-address: true
    ip-address: 127.0.0.1
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/

jwt:
  token-header: Authorization
  expire: 14400
  rsa-secret: xx1WET12^%3^(WE45

client:
  id: pol-auth
  secret: 123456
  token-header: x-client-token
  expire: 14400
  rsa-secret: x2318^^(*WRYQWR(QW&T

logging:
  level:
    com.github.hudic.auth: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: '*'
  security:
    enabled: false
